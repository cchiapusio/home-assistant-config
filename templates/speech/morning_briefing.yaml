>
  {# Daily Briefing #}
  {%- macro getGreeting() -%}
      {% if now().strftime('%H')|int < 12 %}
        Good morning.
      {% elif now().strftime('%H')|int >= 12 and now().strftime('%H')|int < 17 %}
        Good afternoon.
      {% else %}
        Good evening.
      {% endif %}

    {% if is_state('binary_sensor.morning','on') %}
      Today is {{states.sensor.today_is.state }}, {{ as_timestamp(now()) | timestamp_custom('%B') }} {{timestamp_custom('%d')|int }}}}.
    {% else %}
      It is {{ now().strftime("%I:%M %p") }}.
    {% endif %}
  {%- endmacro -%}

  {%- macro getGarbage() -%}
    {% if is_state('sensor.garbage_day','1') %}
      {% if is_state(input_boolean.garbage_out,'off') %}
        Remember to take out the garbage
        {% if is_state_attr('calendar.garbage','message','recycling') %}
          and recycling
        {% endif %}
        tonight.
      {% endif %}
    {% endif %}
    {% if is_state('sensor.garbage_day','0') %}
      {% if is_state(input_boolean.garbage_out,'off') %}
        Did you take the garbage out last night?
      {% endif %}
    {% endif %}
  {%- endmacro -%}


  {%- macro getForecast() -%}
    The weather forecast for 
    {% if now().strftime('%H')|int < 12 %}
        today
      {% elif now().strftime('%H')|int >= 12 and now().strftime('%H')|int < 17 %}
        this afternoon
      {% else %}
        tonight
    {% endif %}
    is {{ state_attr('weather.kclt_daynight','forecast')[0].detailed_description |regex_replace(find='mph', replace='miles per hour', ignorecase=False)}}
  {%- endmacro -%}

  {%- macro getAllergy() -%}
    {% if states.sensor.allergy_index_today.state | int > 4 %}
      Allergy risk is high today. Here, have a kleenex.
    {% endif %}
  {%- endmacro -%}

  {%- macro getHumidity() -%}
    {% if states.sensor.my_ecobee_current_humidity.state | int > 55 %}
      The House humidity is high, is the dehumidifier running?
    {% endif %}
  {%- endmacro -%}

  {%- macro getCommute() -%}
    {% if is_state('binary_sensor.workday','on') %}
      {% if now().strftime('%H')|int < 10 %}
        {% if is_state_attr('calendar.work_schedule','message', "CIC") %}
          The drive to work will be about {{states.sensor.waze_home_to_cic.state}} minutes via {{(state_attr('sensor.waze_home_to_cic','route'))|regex_replace(find='Best-', replace='', ignorecase=False)}}.
        {% elif is_state_attr('calendar.work_schedule','message', "Brevard") %}
          The drive to 485 Station will be about {{states.sensor.waze_home_to_485_station.state}} minutes via {{(state_attr('sensor.waze_home_to_485_station','route'))|regex_replace(find='Best-', replace='', ignorecase=False)}}.
        {% elif is_state_attr('calendar.work_schedule','message', "Holiday") %}
          Today is a {{ state_attr('calendar.holidays_in_united_states','message') }} and you don't have a commute today.
        {% elif is_state_attr('calendar.work_schedule','message', "PTO") %}
          You are on PTO today, party on.
        {% elif is_state_attr('calendar.work_schedule','message', "Limit") %}
          You need to update your work schedule calendar beyond today for accurate briefings.
        {% elif is_state_attr('calendar.work_schedule','message', "Home Office") %}    
          Get your coffee and get upstairs, you work from home today.
        {% endif %}
      {% endif %}
    {% endif %}
  {%- endmacro -%}

  {# a macro that removes all newline characters, empty spaces, and returns formatted text #}
  {%- macro cleanup(data) -%}
    {%- for item in data.split("\n")  if item | trim != "" -%}
      {{ item | trim }} {% endfor -%}
  {%- endmacro -%}

  {# a macro to call all macros :)  #}
  {%- macro mother_of_all_macros() -%}
    {{ getGreeting() }}
    {# getForecast() #}
    {{ getHumidity() }}
    {{ getAllergy() }}
    {{ getGarbage() }}
    {{ getCommute() }}
  {%- endmacro -%}
    
    {# Call the macro  #}
  {{- cleanup(mother_of_all_macros()) -}}